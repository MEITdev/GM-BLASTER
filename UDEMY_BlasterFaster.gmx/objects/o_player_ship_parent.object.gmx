<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>o_player</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ship_slots = 0;
shield = 0;
armor = 0;
hull = 0;
movement_speed = 0;
max_movement_speed = 0;

// speed boost, this will be set to TRUE with the alarm at the start
speed_boost = false;
// start with no booster speed
booster_speed = 0;

// alarm that allows the player to use the speed boost
alarm[SPEED_BOOST] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Trigger the Speed Boost availability
if speed_boost == false
{
    speed_boost = true;
    
    // the boost will last for 0.5 second
    booster_speed = room_speed / 2;

}
else
{
    speed_boost = false;
}

// reset the alarm
alarm[SPEED_BOOST] = room_speed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Move the ship


// Select control type depending on the settings
if (global.Controller == 'Mouse')
{
//    if mouse_check_button(mb_left)
//    {
        target_x = mouse_x;
        target_y = mouse_y;
        if point_distance(x, y, target_x, target_y) &gt; 5
        {
           move_towards_point(target_x, target_y, movement_speed);
        }
        else 
        {
            speed = 0;
        }
//    }
}
else if (global.Controller == 'Keyboard')
{
    
    // TESTING
    if keyboard_check(global.LEFT) &amp;&amp; keyboard_check(vk_lshift)
    {
        // if can boost
        if speed_boost == true
        {
            if booster_speed &gt; 0
            {
                booster_speed -= 1;
            }
            else
            {
                speed_boost = false;
            }
            x -= booster_speed;
       }
    }

    else if keyboard_check(global.RIGHT) &amp;&amp; keyboard_check(vk_lshift)
    {
        // if can boost
        if speed_boost == true
        {
            if booster_speed &gt; 0
            {
                booster_speed -= 1;
            }
            else
            {
                speed_boost = false;
            }
            x += booster_speed;
        }
    }

    
    
    
    
    // keyboard controls as well
    if keyboard_check(global.LEFT)
    {
        x -= movement_speed;
    }
    if (keyboard_check(global.RIGHT))
    {
        x += movement_speed;
    }
    
    if (keyboard_check(global.UP))
    {
        y -= movement_speed;
    }
    if (keyboard_check(global.DOWN))
    {
        y += movement_speed;
    }
}


// Create the laser - default weapon
if (keyboard_check_pressed(vk_space))
{
    instance_create(x, y-10, o_laser);
}

// Restrict the ship to the window
x = clamp(x, 16, room_width-16);
y = clamp(y, 16, room_height-16);



</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Danger Indicator

// create Danger Indicator
// TODO: this will work only if the player has the right upgrade
//if instance_exists(o_asteroid_grey_01)
//{
//}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///DEV DEBUG TOOLS

// return to the main menu
if (keyboard_check(vk_backspace))
{
    
    room_goto(r_menu);
}

// full all the stats
if (keyboard_check(vk_tab))
{
    shiled = 7;
    armor = 7;
    hull = 7;
}

// increase score
if (keyboard_check_pressed(vk_delete))
{
    score += 50;
}

if (keyboard_check_pressed(vk_home))
{
    instance_create(room_width/2, 0, o_armor_powerup);
    instance_create(room_width/2 + 32, 0, o_hull_powerup);
    instance_create(room_width/2 - 32, 0, o_shield_powerup);
    instance_create(room_width/2 - 64 , 0, o_laser_powerup);

    
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Die code
if (hull &lt;= 0)
{

    create_explosion(x, y);
    instance_destroy();
    
    // Create the menu button
    instance_create(room_width/2, room_height/2, o_menu_button);
        
    // Save the payer score to the local highscore file
    highscore_add(global.current_player.name, score);
    
    // reset score to 0 for next game
    score = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
