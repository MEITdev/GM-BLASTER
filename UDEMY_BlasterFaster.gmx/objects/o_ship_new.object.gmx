<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_ship_01_hull</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>o_player_ship_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize the ship

// inherit the events from the parent
event_inherited();

//create the ship engine jet
ship_engine_jet = instance_create(x,y+32, o_ship_01_engine_jet);

/*
// Set the ship slots, this depends on the type of the ship
ship_slots = 2;
shield = 3;
armor = 3;
hull = 3;
movement_speed = 7;

// instantiate the slots upon creation
for (i = 0; i &lt;= ship_slots - 1; i++)
{
    slot[i] = 0;
}

// Initialise slots mount points


for (i = 0; i &lt;= ship_slots - 1; i++)
{
    ship_mount_x[i] = (sprite_width/2) * -1;
    ship_mount_y[i] = 0;
}

    ship_mount_x[0] = (sprite_width/2) * -1;
    ship_mount_y[0] = 0;

    ship_mount_x[1] = (sprite_width/2);
    ship_mount_y[1] = 0;


// attach guns to the ship
//add_weapon(o_ship_new, o_ship_01_Lgun, 0);
//add_weapon(o_ship_new, o_ship_01_Rgun, 1);
*/

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="o_shield_powerup">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Collect the shield powerup
shield += 1;
shield = min(shield, 7); // select the min value from the values given

// run inside the other object
with (other)
{
    instance_destroy();
}

// play the sound effect
if global.Sound == 'On'
{
    audio_play_sound(a_powerup, 5, false);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="o_laser_powerup">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Collect the laser powerup


for (i = 0; i &lt;= global.ship.ship_slots - 1; i++)
{
    // add power when weapon is power based
    if instance_exists(slot[i])
    {
        if object_get_parent(slot[i].object_index) == o_parent_power_gun
        {
            if slot[i].energy_level &lt; slot[i].max_energy_level
            {
                if slot[i].energy_level + 50 &gt; slot[i].max_energy_level
                {
                    slot[i].energy_level = slot[i].max_energy_level;
                }
                else
                {
                    slot[i].energy_level += 50;
                }

            }
        }
    }
    
    // add ammo when weapon is projectile
    if instance_exists(slot[i])
    {
        if (object_get_parent(slot[i].object_index) == o_parent_projectile_gun)
        || (object_get_parent(slot[i].object_index) == o_parent_turrent_gun)
        {
            if slot[i].ammo &lt; slot[i].max_ammo
            {
                if slot[i].ammo + 100 &gt; slot[i].max_ammo
                {
                    slot[i].ammo = slot[i].max_ammo;
                }
                else
                {
                    slot[i].ammo += 100;
                }
            }
        }
    }   
}


//alarm[LASER_POWERUP] = room_speed * 5; // 5 seconds
// destroy the power up object
with (other)
{
    instance_destroy()
}

// play the sound effect
if global.Sound == 'On'
{
    audio_play_sound(a_powerup, 5, false);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="o_hull_powerup">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Collect the hull powerup
hull += 1;
// TODO: This needs to reflect the max hull value for the ship TYPE!!
// should go to PARENT object!!!
hull = min(hull, 7); // select the min value from the values given

// run inside the other object
with (other)
{
    instance_destroy();
}

// play the sound effect
if global.Sound == 'On'
{
    audio_play_sound(a_powerup, 5, false);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="o_armor_powerup">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Collect the armor powerup
armor += 1;
armor = min(armor, 7); // select the min value from the values given

// run inside the other object
with (other)
{
    instance_destroy();
}

// play the sound effect
if global.Sound == 'On'
{
    audio_play_sound(a_powerup, 5, false);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
