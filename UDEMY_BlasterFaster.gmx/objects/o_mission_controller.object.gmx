<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create relevant spawners for this level

if room_get_name(room) == "r_mission_01"
{
    // each instance takes one argument = the level
    enemy_spawner = instance_create(0,0, o_enemy_spawner);
    enemy_spawner.level = 1;
    asteroid_spawner = instance_create(0,0, o_asteroid_spawner);
    asteroid_spawner.level = 1;
    space_objects_spawner = instance_create(0,0, o_space_objects_spawner);
    space_objects_spawner.level = 1;
    enemy_boss_spawner = instance_create(0,0, o_enemy_boss_spawner);
    enemy_boss_spawner.level = 1;
    
    instance_create(0,0, o_view_controller);
    instance_create(0,0, o_ship_controller);

    // used for dialog messages
    level = 1;
    // START THE TIMER
    start_time = date_current_datetime();
    // What is the time limit for the mission in Seconds
    time_limit = 150;

    // Messages for different levels triggers
    mission1_stage1 = false;
    mission1_stage2 = false;    
    // Target socres
    // Here decide what stage the player is in, depending on score or target objectives later
    enemy_spawner.stage1 = 100;
    enemy_spawner.stage2 = 250;
    enemy_spawner.stage3 = 400;

           
}

if room_get_name(room) == "r_mission_02"
{
    
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Mission Time Controller
diff = date_second_span(start_time, date_current_datetime());

// time to display to the player
time_left = round(time_limit - diff);
if diff &gt; time_limit
{

    // save the current state of the player and ship stats
    update_player(global.current_player.save_slot);
    save_player_ship(global.current_player.ship_save_file);
    
    // if it took more than 5 seconds to finish the level, reset
    // for testing - just go to the main menu
    room_goto(r_mission_failed);
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Mission dialogue manager
if level == 1
{
    if enemy_spawner.stage == 1 &amp;&amp; mission1_stage1 == false
    {
        mission1_stage1 = true;
        // display message
        dialog_box(104, 346, 58, 550, "Stage 1", "Enough with the warmup. Watch out for the enemy bombers. Do what you are paid for now!", 5);
        global.avatar = instance_create(584, 296, o_pirate_avatar);
        show_debug_message("TTL: " + string(global.dialog.ttl));
        global.avatar.image_xscale = 0.5;
        global.avatar.image_yscale = 0.5;
    }
    
    if enemy_spawner.stage == 2 &amp;&amp; mission1_stage2 == false
    {
        mission1_stage2 = true;
        // display message
        dialog_box(104, 346, 58, 550, "Stage 2", "Shit just got real. More bombers incoming, watch out for your guns, you don't want to end up without weapons on your ship now would you?!", 5);        
        global.avatar = instance_create(584, 296, o_pirate_avatar);
        global.avatar.image_xscale = 0.5;
        global.avatar.image_yscale = 0.5;
    
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Display the mission timer
draw_set_font(f_timer);
draw_set_halign(fa_center);
draw_set_valign(fa_center);

// select colour depending on the timer
if (time_left / time_limit) &gt; 0.5
{
    draw_set_colour(c_green);
}
else
{
    draw_set_colour(c_red);
}

// Draw the timer on the screen
draw_text(room_width/2, 32, string(time_left));

// reset font to default
draw_set_colour(c_white);
draw_set_font(f_score);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
