<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialise the text box
width = 256;
height = 64;
padding = 8;

// Keep track of the starting line
start = ds_list_create();
ds_list_add(start, 0);


// Keep track of the last space and current position
count = 0;
last_space = 0;
line = 0;

// Set the message
message = "Welcome to Blaster! The game that is about shooting things with lasers so you can buy better lasers to shoot more things, but with better lasers!";
str = ""; // what gets displayed to the screen
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Destroy the ds_list
//clean up cause of memory leak
ds_list_destroy(start);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw the string and the box

// draw the box first, 50% transparency
draw_set_alpha(.5);
draw_roundrect_colour(x, y, x+width, y+height, c_blue, c_red, true);

// set the alpha back to 1 so the text is not transparent
draw_set_alpha(1);

// set the colour
draw_set_colour(c_white);

// Check if the string is past the width
// Insert a line break if yes
// This has to be before getting the last space variable or it won't work right
if (string_width(str) &gt; width - padding - padding)
{
    //Remove the space and replace it with line break
    message = string_delete(message, last_space, 1);
    // enter a line break
    message = string_insert("#", message, last_space);
    // add the ending line location to the ds list
    ds_list_add(start, last_space + 1);
}

//Make sure we have not reached the end of th emessage
if count &lt; string_length(message)
{
    //Check if we are at space. Set the last space variable
    if string_char_at(message, count) == " "
    {
        last_space = count; // save the last space, keep track of the position of the last space in the message
    }
    
    // increment the count
    count++;
}

// Did we go past the bottom? Move up a line
if string_height(str) &gt; (height - padding)
{
    // increment the line we are on
    line++;
}

// Grab the string
str = string_copy(message, ds_list_find_value(start, line), count-ds_list_find_value(start, line));

// Draw the text
draw_text(x+padding, y+padding, str);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
