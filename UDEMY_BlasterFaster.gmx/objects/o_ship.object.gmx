<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_player_ship</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>o_player_ship_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize the ship
alarm[LASER_ALARM] = 1; // start at the first frame of the game

// do not animate the sprites
image_speed = 0;

// set the ship sprite
// Ship types:
// 0 - medium speed, medium armor, medium shooting speed
// 1 - slow speed, large armor, slow shooting
// 2 - fast speed, low armor, medium shooting

if is_undefined(global.player_ship_type)
{
    global.player_ship_type = 0;
}
else image_index = global.player_ship_type

// ship can take shield damage, then amror, then hull, then will blow up
if global.player_ship_type = 0
{
    shield = 3;
    armor = 3;
    hull = 3;
    fire_speed = 6;
    movement_speed = 7;
}
else if global.player_ship_type = 1
{
    shield = 4;
    armor = 4;
    hull = 4;
    fire_speed = 4;
    movement_speed = 5;
}
else if global.player_ship_type = 2
{
    shield = 2;
    armor = 2;
    hull = 2;
    fire_speed = 6;
    movement_speed = 9;
}

// handle the laser powerup boolean
laser_powerup = false;

// Get user name
while (1)
{
    name = get_string("Enter your name pilot: ", "Player");
    if string_length(name) &lt;= 10
    {
        break;
        
    }
    else show_message("Name can be up to 10 characters long!");
}

// Disable the mouse cursor
window_set_cursor(cr_none);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Deactivate laser powerup
laser_powerup = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Create lasers
instance_create(x-12, y-8, o_laser);
instance_create(x+12, y-8, o_laser);

// Reset the alarm
// this depends on the type of the ship
alarm[LASER_ALARM] = room_speed/fire_speed;

// Create the powerup lasers
if (laser_powerup == true)
{
    var laser;
    laser = instance_create(x+12, y-8, o_laser);
    laser.hspeed = .5; // make the laser faster
    laser = instance_create(x-12, y-8, o_laser);
    laser.hspeed = -.5; // make the laser faster

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Move the ship
// Select control type depending on the settings
if (global.Controller == 'Mouse')
{
//    if mouse_check_button(mb_left)
//    {
        target_x = mouse_x;
        target_y = mouse_y;
        if point_distance(x, y, target_x, target_y) &gt; 5
        {
           move_towards_point(target_x, target_y, movement_speed);
        }
        else 
        {
            speed = 0;
        }
//    }
}
else if (global.Controller == 'Keyboard')
{
    // keyboard controls as well
    if (keyboard_check(vk_left))
    {
        x -= movement_speed;
    }
    else if (keyboard_check(vk_right))
    {
        x += movement_speed;
    }
    
    if (keyboard_check(vk_up))
    {
        y -= movement_speed;
    }
    else if (keyboard_check(vk_down))
    {
        y += movement_speed;
    }
}

// instant kill button (fir DEV pruposes only)
if (keyboard_check(vk_backspace))
{
    hull = 0;
}
if (keyboard_check(vk_delete))
{
    score += 50;
}


// Create the laser
if (keyboard_check_pressed(vk_space))
{
    instance_create(x-12, y-5, o_laser);
    instance_create(x+12, y-5, o_laser);
}

// Restrict the ship to the window
x = clamp(x, 16, room_width-16);
y = clamp(y, 16, room_height-16);


// Die code
if (hull &lt;= 0)
{
    create_explosion(x, y);
    instance_destroy();
    
    // Create the menu button
    instance_create(room_width/2, room_height/2, o_menu_button);
    
    // Save the payer score to the local highscore file
    highscore_add(name, score);
    
    // reset score to 0 for next game
    score = 0;
    
    // enable the mouse cursor
    window_set_cursor(cr_default);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="o_shield_powerup">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Collect the shield powerup
shield += 1;
shield = min(shield, 4); // select the min value from the values given

// run inside the other object
with (other)
{
    instance_destroy();
}

// play the sound effect
if global.Sound == 'On'
{
    audio_play_sound(a_powerup, 5, false);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="o_laser_powerup">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Collect the laser powerup
laser_powerup = true;

alarm[LASER_POWERUP] = room_speed * 5; // 5 seconds
// destroy the power up object
with (other)
{
    instance_destroy()
}

// play the sound effect
if global.Sound == 'On'
{
    audio_play_sound(a_powerup, 5, false);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="o_armor_powerup">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Collect the armor powerup
armor += 1;
armor = min(armor, 4); // select the min value from the values given

// run inside the other object
with (other)
{
    instance_destroy();
}

// play the sound effect
if global.Sound == 'On'
{
    audio_play_sound(a_powerup, 5, false);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
