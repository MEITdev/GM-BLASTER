<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_button_new2</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000</depth>
  <persistent>0</persistent>
  <parentName>o_button_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// initialise the button
event_inherited();
text = "FIT";
total_price = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Inherit
event_inherited();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Add the selected weapons to the list of unlocked weapons
for (i = 0; i &lt; global.ship.ship_slots; i++)
{
    gun = object_get_name(global.ship.slot[i].object_index);
    is_in_the_list = false; // assume not in the list
    for (j = 0; j &lt; array_length_1d(global.current_player.purchased); j++)
    {
        loaded_weapon = global.current_player.purchased[j];
        if gun == loaded_weapon // check for duplicates, replace them 
        {
            show_debug_message("already in the list = " + string(loaded_weapon));
            is_in_the_list = true;
        }
    }
    // HERE save the weapon, after the first loop
    if is_in_the_list == false &amp;&amp; (object_get_parent(global.ship.slot[i].object_index) != o_empty_slot)
    {
        global.current_player.purchased[array_length_1d(global.current_player.purchased)] = gun;
    }
}

// DEBUG ONLY
for (g = 0; g &lt; array_length_1d(global.current_player.purchased); g++)
{
    loaded_weapon = global.current_player.purchased[g];
    show_debug_message("unlocked slot[" + string(g) + "] = " + string(loaded_weapon));  
}



</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Purchase the guns

// loop through the choices (weapons on the ship)
for (i = 0; i &lt; global.ship.ship_slots - 1; i++)
{
    total_price += global.ship.slot[i].price;
}

// if the player has enough money, save the ship
if (global.current_player.credits - total_price) &gt;= 0
{
    // update the amount of credits available

    // UNCOMMENT AFTER TESTING (decrements credits after purchase)
    global.current_player.credits = global.current_player.credits - total_price;

    
    // save the player and the ship configuration 
    update_player(global.current_player.save_slot);
    save_player_ship(global.current_player.ship_save_file);
    
    dialog_box(room_width/2 + 40, 16, 50, 120, "Done!", "Changes saved! Thank you!", 3);
    global.avatar = instance_create(global.dialog.x + 120, global.dialog.y, o_robot_avatar);
    global.dialog.avatar = global.avatar.object_index;
//    dialog.ttl = 10;    
}
else
{
    // otherwise show a dialog box
    dialog_box(room_width/2 + 40, 16, 50, 120, "Insufficient funds!", "Not enough money. Sorry, changes will not be saved!", 5);
    global.avatar = instance_create(global.dialog.x +120, global.dialog.y, o_robot_avatar);
    global.dialog.avatar = global.avatar.object_index;
//    dialog.ttl = 10;    
}

// Reset the total price
total_price = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
